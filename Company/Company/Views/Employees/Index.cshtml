@using CompanyASP.ViewModel.SortedEmployee
@model IndexEmployeeViewModel
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    @@font-face {
        font-family: 'FontAwesome';
        src: url('https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/fonts/fontawesome-webfont.woff2') format('woff2'), url('https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/fonts/fontawesome-webfont.woff') format('woff'), url('https://maxcdn.bootstrapcdn.com/font-awesome/4.4.0/fonts/fontawesome-webfont.ttf') format('truetype');
        font-weight: normal;
        font-style: normal
    }

    .glyphicon {
        display: inline-block;
        font: normal normal normal 14px/1 FontAwesome;
        font-size: inherit;
        text-rendering: auto;
        -webkit-font-smoothing: antialiased;
        -moz-osx-font-smoothing: grayscale
    }

    .glyphicon-chevron-right:before {
        content: "\f054";
    }

    .glyphicon-chevron-left:before {
        content: "\f053";
    }
</style>

<h2>Сотрудники компании</h2>

<form method="get">
    <div class="form-inline">
        <label>Имя</label>
        @Html.DropDownList("fullName", Model.FilterEmployeeViewModel.Employees as SelectList,
                                                            htmlAttributes: new { @class = "form-control" });
        <label>Возраст</label>
        <input name="age" value="@Model.FilterEmployeeViewModel.SelectAge" class="form-control" />

        <label>Рейтинг сотрудника</label>
        <input name="raiting" value="@Model.FilterEmployeeViewModel.SelectRaiting" class="form-control" />
        
        <input type="submit" value="Фильтр" class="btn btn-outline-dark" />
    </div>
</form>

<p>
    <a asp-action="Create">Создать нового сотрудника</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-action="Index"
                    asp-route-fullName="@Model.FilterEmployeeViewModel.SelectFullName"\
                    asp-route-age="@Model.FilterEmployeeViewModel.SelectAge"
                    asp-route-raiting="@Model.FilterEmployeeViewModel.SelectRaiting"
                    asp-route-employeeSort="@Model.SortEmployeeViewModel.FullNameSort">Имя</a>
            </th>
            <th>
                <a asp-action="Index"
                   asp-route-fullName="@Model.FilterEmployeeViewModel.SelectFullName"\
                    asp-route-age="@Model.FilterEmployeeViewModel.SelectAge"
                    asp-route-raiting="@Model.FilterEmployeeViewModel.SelectRaiting"
                    asp-route-employeeSort="@Model.SortEmployeeViewModel.SalarySort">Зарплата</a>
            </th>
            <th>
                <a asp-action="Index"
                   asp-route-fullName="@Model.FilterEmployeeViewModel.SelectFullName"\
                    asp-route-age="@Model.FilterEmployeeViewModel.SelectAge"
                    asp-route-raiting="@Model.FilterEmployeeViewModel.SelectRaiting"
                    asp-route-employeeSort="@Model.SortEmployeeViewModel.AgeSort">Возраст</a>
            </th>
            <th>
                <a asp-action="Index"
                   asp-route-fullName="@Model.FilterEmployeeViewModel.SelectFullName"\
                    asp-route-age="@Model.FilterEmployeeViewModel.SelectAge"
                    asp-route-raiting="@Model.FilterEmployeeViewModel.SelectRaiting"
                    asp-route-employeeSort="@Model.SortEmployeeViewModel.RaitingSort">Рейтинг</a>
            </th>
            <th>
                <label>Отдел</label>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Employees)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.FullName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Salary)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Age)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Raiting)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Departament.FullName)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id">Редактировать</a> |
                    <a asp-action="Details" asp-route-id="@item.Id">Подробно</a> |
                    <a asp-action="Delete" asp-route-id="@item.Id">Удалить</a>
                </td>
            </tr>
        }
    </tbody>
</table>
@if (Model.PageViewModel.HasPreviousPage)
{
    <a asp-action="Index"
       asp-route-page="@(Model.PageViewModel.PageNumber - 1)"
        asp-route-fullName="@Model.FilterEmployeeViewModel.SelectFullName"\
        asp-route-age="@Model.FilterEmployeeViewModel.SelectAge"
        asp-route-raiting="@Model.FilterEmployeeViewModel.SelectRaiting"
        asp-route-employeeSort="@Model.SortEmployeeViewModel.CurrentState"
       class="btn btn-outline-dark">
        <i class="glyphicon glyphicon-chevron-left"></i>
        Назад
    </a>
}
@if (Model.PageViewModel.HasNextPage)
{   
    <a asp-action="Index"
       asp-route-page="@(Model.PageViewModel.PageNumber + 1)"
        asp-route-fullName="@Model.FilterEmployeeViewModel.SelectFullName"\
        asp-route-age="@Model.FilterEmployeeViewModel.SelectAge"
        asp-route-raiting="@Model.FilterEmployeeViewModel.SelectRaiting"
        asp-route-employeeSort="@Model.SortEmployeeViewModel.CurrentState"
       class="btn btn-outline-dark">
        Вперед
        <i class="glyphicon glyphicon-chevron-right"></i>
    </a>
}